{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"te",
				"tem\ttemplate"
			],
			[
				"tem",
				"tempfunc\ttemplated function"
			],
			[
				"usin",
				"using  identifier\tnamespace "
			],
			[
				"doc",
				"docker_image_tag"
			],
			[
				"name",
				"program_invocation_name\tchar * "
			],
			[
				"return",
				"returns\t-> decltype(…)"
			],
			[
				"A",
				"ADD_SUBDIRECTORY"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/ToDoCore/unit_test/ToDoTest.cc",
			"settings":
			{
				"buffer_size": 1346,
				"line_ending": "Unix",
				"name": "#include \"ToDoCore/ToDo.h\""
			}
		},
		{
			"file": "/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/main.cc",
			"settings":
			{
				"buffer_size": 1671,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/ToDoCore/ToDo.cc",
			"settings":
			{
				"buffer_size": 427,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 201.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"format",
				"Clang Format: Format Selection"
			],
			[
				"Proje",
				"Project Manager: Add Project"
			],
			[
				"clang",
				"Snippet: Clang version >= check"
			],
			[
				"error",
				"Set Syntax: ClangCompleteErrorPanel"
			],
			[
				"for",
				"Clang Format: Format Selection"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"proj",
				"Project Manager: Open Project"
			],
			[
				"Porjec",
				"Project: Edit"
			],
			[
				"Porject",
				"Project Manager: Add Project"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"list packa",
				"Package Control: List Packages"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"list pac",
				"Package Control: List Packages"
			],
			[
				"package s",
				"Package Syncing: Push Settings"
			],
			[
				"forat",
				"Clang Format: Format Selection"
			],
			[
				"selec st",
				"Clang Format: Select Style"
			],
			[
				"select s",
				"Clang Format: Select Style"
			],
			[
				"Clang",
				"Clang Format: Format Selection"
			],
			[
				"Clan",
				"Clang Format: Select Style"
			],
			[
				"cla",
				"Clang Format: Format Selection"
			],
			[
				"clan",
				"Clang Format: Format Selection"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"comment",
				"Toggle Comment"
			],
			[
				"Package S",
				"Package Syncing: Push Settings"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"ana",
				"AutoDocstring: All"
			],
			[
				"Package Syn",
				"Package Syncing: Pull Settings"
			],
			[
				"package syn",
				"Package Syncing: Define Sync Folder"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"Dock",
				"DocBlockr: Decorate line comment"
			],
			[
				"Doclk",
				"DocBlockr: Reparse comment block"
			],
			[
				"doc",
				"AutoDocstring: All"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"pep8",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"cmake",
				"STProjectMaker: Create project"
			],
			[
				"terminal",
				"Preferences: Terminal Settings – Default"
			],
			[
				"status",
				"git: status"
			],
			[
				"add comit",
				"Git (SideBarGit): Add & Commit & Push…"
			],
			[
				"git status",
				"GitStatus: Changed files"
			],
			[
				"git add commit",
				"Git (SideBarGit): Add & Commit & Push…"
			],
			[
				"git",
				"GitSavvy: reload modules (debug)"
			],
			[
				"upgrade",
				"SVN: Upgrade to Newer Working Copy Format"
			],
			[
				"SVN: upgt",
				"SVN: Upgrade to Newer Working Copy Format"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"json",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"tree",
				"JsonTree: Show Tree"
			],
			[
				"setting",
				"Preferences: Settings - User"
			],
			[
				"termin",
				"Terminality: Browse Commands..."
			],
			[
				"log",
				"git: log"
			],
			[
				"form",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"auto",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"run",
				"Anaconda: Run Current Test"
			],
			[
				"docb",
				"DocBlockr: Decorate line comment"
			],
			[
				"sidebargit add",
				"Git (SideBarGit): Add & Commit & Push…"
			],
			[
				"sidebargit: add",
				"Git (SideBarGit): Add & Commit & Push…"
			],
			[
				"pull",
				"git: pull"
			],
			[
				"define",
				"Package Syncing: Define Sync Folder"
			],
			[
				"align",
				"Preferences: Alignment Key Bindings – Default"
			],
			[
				"alig",
				"Preferences: Alignment Key Bindings – User"
			],
			[
				"alignment",
				"Preferences: Alignment File Settings – Default"
			],
			[
				"aligneme",
				"Preferences: Alignment Key Bindings – Default"
			],
			[
				"packag",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"package inst",
				"Package Control: Install Package"
			],
			[
				"package insta",
				"Package Control: Install Package"
			],
			[
				"package instal",
				"Package Control: Install Package"
			]
		],
		"width": 746.0
	},
	"console":
	{
		"height": 408.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"git",
			"help",
			"ls",
			"dd",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4"
	],
	"file_history":
	[
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/chapter_4.sublime-project",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_1/chapter_1.sublime-project",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/ToDoCore/CMakeLists.txt",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/ToDoCore/unit_test/CMakeLists.txt",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/toDoCore/unit_test/CMakeLists.txt",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/toDoCore/unit_test/ToDoTest.cc",
		"/home/atty/.cache/.fr-qUu5MZ/chapter4-1/main.cc",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/main.cc",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/ToDoCore/ToDo.h",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/CMakeLists.txt",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/ToDoCore/unit_test/ToDoTest.cc",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/toDoCore/CMakeLists.txt",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/build.sh",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_1/main.cc",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_1/run.sh",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_1/ToDo.h",
		"/home/atty/.config/sublime-text-3/Packages/User/Projects/chapter_1.sublime-project",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_1/ToDo.cc",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_1/CMakeLists.txt",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_1/build/configure.sh",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_1/configure.sh",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_1/view_tests_results.sh",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_1/build.sh",
		"/home/atty/Prog/CMAKE_TUTORIALS/chapter_1/build_test.sh",
		"/home/atty/.config/sublime-text-3/Packages/ClangComplete/ClangComplete.sublime-settings",
		"/home/atty/.config/sublime-text-3/Packages/User/ClangComplete.sublime-settings",
		"/home/atty/Prog/__MUSICS__/ITPFMADA_COURSERA/.gitignore",
		"/home/atty/.config/sublime-text-3/Packages/User/C++YouCompleteMe.sublime-settings",
		"/home/atty/Prog/__MUSICS__/ITPFMADA_COURSERA/README.md",
		"/home/atty/Prog/__MUSICS__/libmusicxml_for_chuck/libmusicxml-3.00-src/src/parser/xmlparse.cpp",
		"/home/atty/Prog/__MUSICS__/libmusicxml_for_chuck/libmusicxml-3.00-src/src/interface/libmusicxml.cpp",
		"/home/atty/.config/sublime-text-3/Packages/C++YouCompleteMe/C++YouCompleteMe.sublime-settings",
		"/home/atty/Prog/Docker/ChucK_ssh/run.ssh",
		"/home/atty/Prog/Docker/ChucK_ssh/Dockerfile",
		"/home/atty/Prog/Docker/ChucK_ssh/launch.sh",
		"/home/atty/Prog/Docker/ChucK_ssh/build.sh",
		"/home/atty/.ssh/config",
		"/home/atty/Prog/Docker/ChucK/launch.sh",
		"/home/atty/Prog/Docker/ChucK/Dockerfile",
		"/home/atty/Prog/Docker/ChucK/run.sh",
		"/home/atty/Prog/Docker/ChucK/run_ssh.sh",
		"/home/atty/Prog/Docker/ChucK/build.sh",
		"/home/atty/Prog/boost/tests_boost/threads/waitfree_producer_consumer/.gitignore",
		"/home/atty/Prog/Docker/boost/1_60_0/Dockerfile",
		"/home/atty/Prog/Docker/modern-cpp-docker/Dockerfile",
		"/home/atty/Prog/bablib_master/bablib_projects/projects/prog/shadow_projects/temporal_dsm_clean_v0.9/sources/viewer_shadow.cpp",
		"/home/atty/.config/sublime-text-3/Packages/DoxyDoc/DoxyDoc.sublime-settings",
		"/home/atty/.config/sublime-text-3/Packages/DocBlockr/README.md",
		"/home/atty/test.cpp",
		"/home/atty/test.php",
		"/home/atty/.config/sublime-text-3/Packages/User/Base File.sublime-settings",
		"/home/atty/.config/sublime-text-3/Packages/User/terminalinpackages.sublime-settings",
		"/home/atty/.config/sublime-text-3/Packages/User/TerminalinPackages/Default.sublime-keymap",
		"/home/atty/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/atty/Music/__TEMPOS__/__METRONOMES__/pybash.sh",
		"/home/atty/.gtickrc",
		"/home/atty/Music/__TEMPOS__/__METRONOMES__/gtick.profiles",
		"/home/atty/Prog/__MUSICS__/gtick/.gitignore",
		"/home/atty/Music/__TEMPOS__/__METRONOMES__/tree.txt",
		"/home/atty/Music/__TEMPOS__/__METRONOMES__/script_generate_profile.py",
		"/home/atty/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/atty/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/atty/.config/sublime-text-3/Packages/Terminal in Packages/terminalinpackages.sublime-settings",
		"/media/atty/WIN7_INST_DATAS/__DATAS__/__ZIKS__/__GROUPES__/music_deepm/.git/config",
		"/home/atty/Prog/__MUSICS__/gtick/scripts/script_generate_profile.py",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/interactive_map_tracking.Config_Tools.log",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/dump_pickle.p",
		"/home/atty/Prog/__PYTHON__/__QGIS__/TrafiPollu/help/build/latex/interactive_map_tracking.tex",
		"/home/atty/Prog/__PYTHON__/__QGIS__/TrafiPollu/.gitignore",
		"/home/atty/Prog/__MUSICS__/gtick/configure.log",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/interactive_map_tracking.trafipolluImp_EXPORT.log",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/interactive_map_tracking.trafipolluImp_TOPO.log",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/interactive_map_tracking.trafipolluImp_Tools_Symuvia.log",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/interactive_map_tracking.trafipolluImp_SQL.log",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/interactive_map_tracking.trafipolluImp_PYXB.log",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/interactive_map_tracking.trafipolluImp.log",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/interactive_map_tracking.trafipolluImp_EXPORT_TRAFICS.log",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/interactive_map_tracking.trafipolluImp_EXPORT_CONNEXIONS.log",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/interactive_map_tracking.trafipolluImp_DUMP.log",
		"/home/atty/Prog/__PYTHON__/__QGIS__/TrafiPollu/help/build/latex/interactive_map_tracking.out",
		"/home/atty/Prog/__PYTHON__/__QGIS__/REDME_TrafiPollu_Installation_VM.md",
		"/home/atty/Prog/scripts/set_env_SFML-1.6.sh",
		"/home/atty/Prog/bablib/setup.linux",
		"/home/atty/Prog/scripts/set_env.sh",
		"/home/atty/Prog/scripts/set_env_bablib.sh",
		"/home/atty/Prog/scripts/set_env_osg_local.sh",
		"/home/atty/Prog/scripts/set_env_osg_install.sh",
		"/home/atty/.bashrc",
		"/home/atty/Scripts/setenvs.sh",
		"/home/atty/Scripts/set_env_bablib.sh",
		"/home/atty/Prog/__PYTHON__/__QGIS__/shapeviewer/ShapeViewer.py",
		"/home/atty/go_to_TrafiPollu.sh",
		"/home/atty/Prog/unitTests/gtest/test_sqr/whattotest.cpp",
		"/home/atty/Prog/unitTests/gtest/test_sqr/tests.cpp",
		"/home/atty/Prog/unitTests/gtest/test_sqr/CMakeLists.txt",
		"/home/atty/Prog/unitTests/gtest/test_sqr/Project.sublime-project",
		"/home/atty/Prog/CG/CHALLENGES/Back to the Code/uct/CMakeLists.txt",
		"/home/atty/Prog/Volumetric_Dynamic_Lights_2/CMakeLists.txt",
		"/usr/share/cmake-2.8/Modules/FindOpenGL.cmake",
		"/home/atty/Desktop/iso/boot/grub/grub.cfg",
		"/home/atty/script_mount_H_DRIVE.sh",
		"/home/atty/interactive_map_tracking.trafipolluImp_SQL.log",
		"/home/atty/Prog/__PYTHON__/__QGIS__/TrafiPollu/trafipolluImp_Tools_Symuvia.py",
		"/home/atty/Prog/reseau_symuvia/reseau_paris6_v11_new.xml",
		"/home/atty/script_go_to_TrafiPollu.sh",
		"/home/atty/launch_SymuNet_2015.sh",
		"/home/atty/.qgis2/python/plugins/interactive_map_tracking/*.log",
		"/home/atty/activity.log",
		"/home/atty/*.log",
		"/home/yourusername/Desktop/iso/boot/grub/grub.cfg",
		"/home/atty/Prog/Qt/Tools/QtCreator/share/qtcreator/generic-highlighter/glsl.xml",
		"/home/atty/Prog/Volumetric_Dynamic_Lights_2/CMakeModules/FindOpenGL.cmake",
		"/home/atty/Prog/Volumetric Dynamic Lights/OpenGL/CMakeLists.txt",
		"/home/atty/Prog/Volumetric Dynamic Lights/OpenGL/MathLib/CMakeLists.txt",
		"/home/atty/Prog/Volumetric Dynamic Lights/CMakeLists.txt",
		"/home/atty/Prog/iSpaceTime_from_Git/CMakeLists.txt",
		"/home/atty/Prog/Volumetric Dynamic Lights/OpenGL/ShaderManager/CMakeLists.txt",
		"/home/atty/Prog/Volumetric Dynamic Lights/OpenGL/ShaderManager/GPUShader.h",
		"/home/atty/Prog/Volumetric Dynamic Lights/OpenGL/TextureManager/CMakeLists.txt",
		"/usr/include/GL/glext.h",
		"/home/atty/Prog/iSpaceTime_from_Git/CMakeLists.txtis",
		"/home/atty/Prog/Volumetric Dynamic Lights/OpenGL/MathLib/Matrix4.h",
		"/home/atty/Prog/Volumetric Dynamic Lights/OpenGL/MathLib/MathLib.cpp",
		"/home/atty/Prog/Volumetric Dynamic Lights/OpenGL/MathLib/MathLibFunc.cpp",
		"/home/atty/Prog/Volumetric Dynamic Lights/OpenGL/MathLib/Matrix4.cpp",
		"/home/atty/Prog/Volumetric Dynamic Lights/OpenGL/MathLib/MathLib.h",
		"/home/atty/Prog/Volumetric Dynamic Lights/OpenGL/MathLib/Matrix4",
		"/home/atty/.config/sublime-text-3/Packages/Terminal/Terminal.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"",
			"spsc_queue_captures",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"mychuckwriter",
			"m_samples_manager",
			"CSampleManager",
			"Image",
			"cur_capture",
			"spsc_queue",
			"Terminal",
			"terminal",
			"Terminal",
			"hig",
			"High",
			"... no",
			"TrafiPolluImp._pickled_trafipollu_",
			"_",
			"_clear_",
			"_",
			"title",
			"tp_composants",
			"interactive_map_tracking",
			"qgis_prefix",
			"deploy",
			"E_49489",
			"EXTREMITE",
			"OPENGL_gl_LIBRARY",
			"libGL",
			"OPENGL_gl_LIBRARY",
			"LIBRARY",
			"glUseProgramObjectARB",
			"MathLib.h",
			"director",
			"D_GPU_PERF",
			"filename=\"",
			"blur",
			"atmos",
			"scat",
			"scattering",
			"musicbrainzngs",
			"musicbrainzngs.",
			"search_",
			"search_artists",
			"get_artist_by_id",
			"python",
			"()\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"m_capture",
			"spsc_queue_captures",
			"tp composants",
			"interactive map tracking",
			"filename=\"src/"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/ToDoCore/unit_test/ToDoTest.cc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1346,
						"regions":
						{
						},
						"selection":
						[
							[
								9,
								9
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "#include \"ToDoCore/ToDo.h\"",
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_savvy.file_path": "/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/ToDoCore/unit_test/ToDoTest.cc",
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/main.cc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1671,
						"regions":
						{
						},
						"selection":
						[
							[
								688,
								688
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"git_savvy.file_path": "/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/main.cc",
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 255.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/ToDoCore/ToDo.cc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 427,
						"regions":
						{
						},
						"selection":
						[
							[
								140,
								140
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										407,
										408
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										39,
										40
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"git_savvy.file_path": "/home/atty/Prog/CMAKE_TUTORIALS/chapter_4/ToDoCore/ToDo.cc",
							"git_savvy.repo_path": "/home/atty/Prog/CMAKE_TUTORIALS",
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clangcomplete":
	{
		"height": 112.0
	},
	"output.exec":
	{
		"height": 125.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/C++/C++ Single File.sublime-build",
	"project": "chapter_1.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 313.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
